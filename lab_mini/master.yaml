clab_name: mini
drawio_diagram: topology.drawio

# Continerlab parameters
clab_startup:
  iosxr:
    image: ios-xr/xrd-control-plane:24.2.11
    kind: cisco_xrd
    startup-config: xrd_initial_cfg.j2
  xrv9k:
    image: vrnetlab/cisco_xrv9k:7.10.2
    kind: cisco_xrv9k
    startup-config: xrd_initial_cfg.j2
    env:
      VCPU: 4
      RAM: 20480
      # this is required for correct assignment of mgmt address (otherwise each node gets 10.0.0.15)
      CLAB_MGMT_PASSTHROUGH: true
  ios:
    image: vrnetlab/cisco_csr1000v:17.03.08
    kind: cisco_csr1000v
    startup-config: ios_initial_cfg.j2
    env:
      # this is required for correct assignment of mgmt address (otherwise each node gets 10.0.0.15)
      CLAB_MGMT_PASSTHROUGH: true
  n9kv:
    image: vrnetlab/cisco_n9kv:10.4.5
    kind: cisco_n9kv
    startup-config: nxos_ssh_initial_cfg.j2
    env:
      VCPU: 4
      RAM: 10240
      # this is required for correct assignment of mgmt address (otherwise each node gets 10.0.0.15)
      CLAB_MGMT_PASSTHROUGH: true
# Nornir parameters
nornir_startup:
  # note: xrd and xrv9k are equivalent configuration wise -> the same iosxr nornir platform 
  iosxr:
    platform: iosxr
    timeout: 60
  ios:
    platform: ios
    timeout: 60
  nxos_ssh:
    platform: nxos_ssh
    timeout: 60
  linux:
    platform: linux
  inventory:
    plugin: SimpleInventory
    options:
      host_file: 'nornir/nornir_hosts.yaml'
      group_file: 'nornir/nornir_groups.yaml'
  runner:
    plugin: threaded
    options:
      num_workers: 10
  logging:
    log_file: nornir/nornir.log

# Parameters specific to each vendor/device type
device_groups:
  iosxr:
    # use default clab credentials (clab/clab@123), because these are baked into xrv9k docker image!
    # - do not define/modify CLAB_MGMT_VRF for the same reason
    username: clab
    password: clab@123
    clab:
      inherit_from: clab_startup.iosxr
    # clab_startup.yaml expects different naming (Gi0-0-0-0) than iosxr (Gi0/0/0/0)
    # - add mapping logic for each clab kind (that requires mapping) in: scripts/utils.py -> clab_intf_map()
    clab_intf_map: True
    nornir:
      inherit_from: nornir_startup.iosxr
    # intf_naming is used for auto-allocation of interface IDs for specific interface type
    intf_naming:
      default:
        name: Gi0/0/0/
        first_id: 0
      core_bundle: 
        name: Bundle-Ether
        first_id: 1
      loopback0:
        name: Loopback
        first_id: 0
    interfaces:
      mgmt:
        name: MgmtEth0/RP0/CPU0/0
  xrv9k:
    # use default clab credentials, because these are baked into xrv9k docker image!
    username: clab
    password: clab@123
    clab:
      inherit_from: clab_startup.xrv9k
    nornir:
      inherit_from: nornir_startup.iosxr
    # intf_naming is used for auto-allocation of interface IDs for specific interface type
    intf_naming:
      default:
        name: Gi0/0/0/
        first_id: 0
      core_bundle: 
        name: Bundle-Ether
        first_id: 1
      loopback0:
        name: Loopback
        first_id: 0
    interfaces:
      mgmt:
        name: MgmtEth0/RP0/CPU0/0

  ios:
    username: clab
    password: clab@123
    clab:
      inherit_from: clab_startup.ios
    nornir:
      inherit_from: nornir_startup.ios
    # this is used for auto-allocation of interface IDs
    intf_naming:
      default:
        name: Gi
        first_id: 2
      core_bundle: 
        name: BE
        first_id: 1
      loopback0:
        name: Loopback
        first_id: 0
    interfaces:
      mgmt:
        name: GigabitEthernet1

  n9kv:
    # use default clab credentials, because these are baked into n9kv docker image!
    username: admin
    password: admin
    clab:
      inherit_from: clab_startup.n9kv
    nornir:
      inherit_from: nornir_startup.nxos_ssh
    # intf_naming is used for auto-allocation of interface IDs for specific interface type
    intf_naming:
      default:
        name: Ethernet1/
        first_id: 1
      loopback0:
        name: Loopback
        first_id: 0
    interfaces:
      mgmt:
        name: mgmt0

  host:
    username: vlisjak
    password: volpe123
    clab:
      kind: host
    nornir:
      inherit_from: nornir_startup.linux
    intf_naming:
      default:
        name: ens256.
        first_id: 100
    interfaces:
      mgmt:
        name: ens192

# List of all devices with inherited vendor-specific (device_groups) and role-specific (device_roles) inventory
devices:
  p1:
    device_roles: [p]
    inherit_from: 
      - device_groups.xrv9k
  p2:
    device_roles: [p]
    inherit_from: 
      - device_groups.iosxr
  pe1:
    device_roles: [pe]
    ibgp:
      asn: 100
      client_of: rr
    inherit_from: 
      - device_groups.iosxr
  cpe1:
    device_roles: [cpe]
    inherit_from: 
      - device_groups.ios
  n9kv1:
    device_roles: [pe]
    inherit_from: 
      - device_groups.n9kv
  host:
    device_roles: [host]
    inherit_from:
      - device_groups.host
    interfaces:
      mgmt:
        ipv4_address: 10.48.188.45/26

# Link-group parameters
link_groups:
  core:
    link_group: core
    prefix: 1.0.0.0/16
    isis: 
      instance: CORE
  access_l3vpn:
    link_group: l3vpn
    prefix: 1.1.0.0/16
    mtu: 1505
  host:
    # connect node data port to vlan uplink of host
    link_group: core_host
    isis: 
      instance: CORE
  loopback0:
    link_group: loopback0
    prefix: 1.255.0.0/24
  mgmt:
    # If you're starting multiple clabs, you must use different mgmt prefix for each clab instance
    link_group: mgmt
    prefix: 10.255.0.0/24

# Topology definition
# - parallel links are allowed
# - loopback0 and MgmtEth interfaces will be generated by lab_create.py
# - ensure that all nodes are first defined in "devices:" object
links:
  - link: p1:Gi0/0/0/0---host:ens256.111
    inherit_from: link_groups.host
  - link: p2:Gi0/0/0/0---host:ens256.112
    inherit_from: link_groups.host
  - link: p1---p2
    inherit_from: link_groups.core
  - link: p1---pe1
    inherit_from: link_groups.core
  - link: p2---pe1
    inherit_from: link_groups.core
  - link: pe1---cpe1
    inherit_from: link_groups.access_l3vpn
  - link: pe1---cpe1
    inherit_from: link_groups.access_l3vpn
  - link: pe1---n9kv1
    inherit_from: link_groups.core